@using Healt_Food.Client.ViewModel;
@using Healt_Food.Shared.Entites;
@using Healt_Food.Shared.Enums;
@using Blazored.Modal.Services;

@inject IToastService toastService
@inject HttpClient Http
@inject FoodViewModel model

<InputSelect class="form-select" @bind-Value="dayOfWeek">

    @foreach (var day in Enum.GetValues(typeof(DayOfWeekEnum)))
    {
        <option>@day</option>
    }
</InputSelect>

<button class="btn btn-primary mt-2" @onclick="() => AddToWeek()">Choose</button>
@code {
    public Food food { get; set; }
    private DayOfWeekEnum dayOfWeek;

    private bool AddToWeeklyPlan()
    {
        Food food = model._food;

        if (food.InMonday && dayOfWeek == DayOfWeekEnum.Monday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }
        if (food.InTuesday && dayOfWeek == DayOfWeekEnum.Tuesday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }
        if (food.InWednesday && dayOfWeek == DayOfWeekEnum.Wednesday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }
        if (food.InThursday && dayOfWeek == DayOfWeekEnum.Thursday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }
        if (food.InFriday && dayOfWeek == DayOfWeekEnum.Friday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }
        if (food.InSaturday && dayOfWeek == DayOfWeekEnum.Saturday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }
        if (food.InSunday && dayOfWeek == DayOfWeekEnum.Sunday)
        {
            toastService.ShowError("erfolgreich zum Sonntagsplan hinzugefügt ");
            return false;
        }

        return true;
    }

    private async Task AddToWeek()
    {
        Food food = model._food;
        if (AddToWeeklyPlan())
        {
            if (dayOfWeek == DayOfWeekEnum.Monday)
                food.InMonday = true;
            if (dayOfWeek == DayOfWeekEnum.Tuesday)
                food.InTuesday = true;
            if (dayOfWeek == DayOfWeekEnum.Wednesday)
                food.InWednesday = true;
            if (dayOfWeek == DayOfWeekEnum.Thursday)
                food.InThursday = true;
            if (dayOfWeek == DayOfWeekEnum.Friday)
                food.InFriday = true;
            if (dayOfWeek == DayOfWeekEnum.Saturday)
                food.InSaturday = true;
            if (dayOfWeek == DayOfWeekEnum.Sunday)
                food.InSunday = true;

            
            await Http.PutAsJsonAsync("Food", food);
            toastService.ShowSuccess("steht schon im Sonntagsplan ");
        }
    }
}